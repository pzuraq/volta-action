name: "CI"
on:
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

defaults:
  run:
    shell: bash

env:
  NODE_OPTIONS: '--unhandled-rejections=strict'

jobs:
  test:
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      matrix:
        os: [ubuntu, macOS, windows]

    steps:
    - uses: actions/checkout@v1

    - run: npm ci
    - run: npm run lint
    - run: npm run build
    - run: npm test

  test-specific-volta:
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      fail-fast: false
      matrix:
        volta-version: ["0.9.0","0.8.7","0.7.2","0.6.8"]
        os: [ubuntu, macOS, windows]
        exclude:
          # this action didn't support windows until at least Volta 0.7
          - os: windows
            volta-version: "0.6.8"

    steps:
    - uses: actions/checkout@v1
    - run: npm ci
    - run: npm run build
    - uses: ./
      with:
        volta-version: ${{ matrix.volta-version }}

    - run: tests/log-info.sh
    - run: tests/check-version.sh 'volta' ${{ matrix.volta-version }}
    - run: volta install node@10.17.0 yarn@1.19.0
    - run: tests/check-version.sh 'node' 'v10.17.0'
    - run: tests/check-version.sh 'yarn' '1.19.0'


  test-no-options:
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      matrix:
        os: [ubuntu, macOS, windows]

    steps:
    - uses: actions/checkout@v1

    - run: npm ci
    - run: npm run build
    - uses: ./

    - run: tests/log-info.sh
    - run: tests/check-version.sh 'volta' 'current'
    - run: volta install node@12.16.1 npm@7.5.2 yarn@1.19.1
    - run: tests/check-version.sh 'node' 'v12.16.1'
    - run: tests/check-version.sh 'npm' '7.5.2'
    - run: tests/check-version.sh 'yarn' '1.19.1'

  test-specified-node-npm-yarn-overrides-pinned-versions:
    runs-on: "${{ matrix.os }}-latest"

    defaults:
      run:
        working-directory: ./action

    strategy:
      matrix:
        os: [ubuntu, macOS, windows]

    steps:
    - uses: actions/checkout@v2
      with:
        ref: 'branch-for-testing-overriding-pinned-projects-in-ci'

    - uses: actions/checkout@v2
      with:
        path: action

    - run: npm ci
    - run: npm run build

    - uses: ./action
      with:
        node-version: 12.14.0
        npm-version: 7.5.2
        yarn-version: 1.22.0

    - run: tests/log-info.sh
    - run: tests/check-version.sh 'node' 'v12.14.0'
    - run: tests/check-version.sh 'npm' '7.5.2'
    - run: tests/check-version.sh 'yarn' '1.22.0'

  test-specific-volta-node-npm-yarn:
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      matrix:
        os: [ubuntu, macOS, windows]

    steps:
    - uses: actions/checkout@v1

    - run: npm ci
    - run: npm run build
    - uses: ./
      with:
        volta-version: 1.0.1
        node-version: 12.0.0
        npm-version: 7.5.2
        yarn-version: 1.22.0

    - run: tests/log-info.sh
    - run: tests/check-version.sh 'volta' '1.0.1'
    - run: tests/check-version.sh 'node' 'v12.0.0'
    - run: tests/check-version.sh 'npm' '7.5.2'
    - run: tests/check-version.sh 'yarn' '1.22.0'

  test-specified-registry-url:
    runs-on: "${{ matrix.os }}-latest"

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macOS, windows]

    steps:
    - uses: actions/checkout@v1
    - run: npm ci
    - run: npm run build
    - uses: ./
      with:
        registry-url: "https://some.path.here.com/lol/"

    - run: tests/log-info.sh
    - run: tests/check-version.sh 'volta' 'current'
    - run: volta install node@10.17.0 yarn@1.19.0
    - run: tests/check-version.sh 'node' 'v10.17.0'
    - run: tests/check-version.sh 'yarn' '1.19.0'
    - run: tests/check-registry.sh 'https://some.path.here.com/lol/'
